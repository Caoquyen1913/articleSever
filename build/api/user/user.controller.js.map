{"version":3,"sources":["../../../src/api/user/user.controller.js"],"names":["saltRounds","signin","req","res","next","name","username","password","body","hashPassword","bcrypt","hash","user","userModel","create","isActive","json","data","error"],"mappings":";;AAAA;;AACA;;;;AACA,MAAMA,UAAU,GAAG,EAAnB;;AACA,MAAMC,MAAM,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACrC,MAAI;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA+BL,GAAG,CAACM,IAAzC;AACA,UAAMC,YAAY,GAAG,MAAMC,gBAAOC,IAAP,CAAYJ,QAAZ,EAAsBP,UAAtB,CAA3B;AACA,UAAMY,IAAI,GAAG,MAAMC,cAAUC,MAAV,CAAiB;AAChCT,MAAAA,IADgC;AAC1BC,MAAAA,QAD0B;AAChBC,MAAAA,QAAQ,EAAEE,YADM;AACQM,MAAAA,QAAQ,EAAE;AADlB,KAAjB,CAAnB;AAGAZ,IAAAA,GAAG,CAACa,IAAJ,CACI;AACIC,MAAAA,IAAI,EAAEL;AADV,KADJ;AAKH,GAXD,CAWE,OAAOM,KAAP,EAAc;AACZ,WAAOd,IAAI,CAACc,KAAD,CAAX;AACH;AACJ,CAfD","sourcesContent":["import userModel from \"./user.model\";\nimport bcrypt from \"bcrypt\"\nconst saltRounds = 10;\nconst signin = async (req, res, next) => {\n    try {\n        const { name, username, password } = req.body;\n        const hashPassword = await bcrypt.hash(password, saltRounds);\n        const user = await userModel.create({\n            name, username, password: hashPassword, isActive: true\n        })\n        res.json(\n            {\n                data: user\n            }\n        )\n    } catch (error) {\n        return next(error)\n    }\n}\n\n"],"file":"user.controller.js"}