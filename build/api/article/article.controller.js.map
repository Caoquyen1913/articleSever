{"version":3,"sources":["../../../src/api/article/article.controller.js"],"names":["getArticle","req","res","query","articles","articleService","loadArticleData","tags","dateStart","dateEnd","page","limit","key","Date","updatedAt","$gte","$lt","$in","$text","$search","totalPages","pagingHandle","paging","model","articleModel","selection","options","responseHandle","sendPaging","HttpStatusCode","OK","message","data","error","send","INTERNAL_SERVER","errors","create","article","body","like","likeArticle","id","params","updatedArticle","findOneAndUpdate","_id","published","$inc"],"mappings":"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","sourcesContent":["import articleModel from './article.model';\nimport pagingHandle from '../../utils/pagingHandle';\nimport responseHandle from '../../utils/responseHandle';\nimport articleService from './article.service';\nimport { HttpStatusCode } from '../../const/httpCode';\nconst getArticle = async (req, res) => {\n  try {\n    if (!req.query) {\n      const articles = articleService.loadArticleData();\n    } else {\n      let { tags, dateStart, dateEnd, page, limit, key } = req.query;\n      dateStart = new Date(dateStart);\n      dateEnd = new Date(dateEnd);\n      let query = { updatedAt: { $gte: dateStart, $lt: dateEnd } };\n      if (tags)\n        query = {\n          ...query,\n          tags: {\n            $in: tags,\n          },\n        };\n      if (key)\n        query = {\n          ...query,\n          $text: {\n            $search: key,\n          },\n        };\n      const [articles, totalPages] = await pagingHandle.paging({\n        model: articleModel,\n        query,\n        selection: {},\n        page,\n        limit,\n        options: {},\n      });\n    }\n    return responseHandle.sendPaging(\n      res,\n      HttpStatusCode.OK,\n      {\n        message: 'get article success',\n        data: articles,\n      },\n      totalPages,\n      page\n    );\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nconst create = async (req, res) => {\n  try {\n    const article = await articleModel.create({\n      ...req.body,\n      like: 0,\n    });\n    return responseHandle.send(res, HttpStatusCode.OK, {\n      message: 'create article success',\n      data: article,\n    });\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nconst likeArticle = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const updatedArticle = await articleModel.findOneAndUpdate(\n      {\n        _id: id,\n        published: true,\n      },\n      {\n        $inc: {\n          like: 1,\n        },\n      }\n    );\n    return responseHandle.send(res, HttpStatusCode.OK, {\n      message: 'like article success',\n      data: updatedArticle,\n    });\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nexport default {\n  getArticle,\n  create,\n  likeArticle,\n};\n"],"file":"article.controller.js"}