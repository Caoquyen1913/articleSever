{"version":3,"sources":["../../../src/api/article/article.controller.js"],"names":["getArticle","req","res","tags","dateStart","dateEnd","page","limit","key","query","Date","updatedAt","$gte","$lt","$in","$text","$search","articles","totalPages","pagingHandle","paging","model","articleModel","selection","options","responseHandle","sendPaging","HttpStatusCode","OK","message","data","error","send","INTERNAL_SERVER","errors","create","article","body","like","likeArticle","id","params","updatedArticle","findOneAndUpdate","_id","published","$inc"],"mappings":"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","sourcesContent":["import articleModel from './article.model';\nimport pagingHandle from '../../utils/pagingHandle';\nimport responseHandle from '../../utils/responseHandle';\nimport { HttpStatusCode } from '../../const/httpCode';\nconst getArticle = async (req, res) => {\n  try {\n    let { tags, dateStart, dateEnd, page, limit, key } = req.query;\n    dateStart = new Date(dateStart);\n    dateEnd = new Date(dateEnd);\n    let query = { updatedAt: { $gte: dateStart, $lt: dateEnd } };\n    if (tags)\n      query = {\n        ...query,\n        tags: {\n          $in: tags,\n        },\n      };\n    if (key)\n      query = {\n        ...query,\n        $text: {\n          $search: key,\n        },\n      };\n    const [articles, totalPages] = await pagingHandle.paging({\n      model: articleModel,\n      query,\n      selection: {},\n      page,\n      limit,\n      options: {},\n    });\n    return responseHandle.sendPaging(\n      res,\n      HttpStatusCode.OK,\n      {\n        message: 'get article success',\n        data: articles,\n      },\n      totalPages,\n      page\n    );\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nconst create = async (req, res) => {\n  try {\n    const article = await articleModel.create({\n      ...req.body,\n      like: 0,\n    });\n    return responseHandle.send(res, HttpStatusCode.OK, {\n      message: 'create article success',\n      data: article,\n    });\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nconst likeArticle = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const updatedArticle = await articleModel.findOneAndUpdate(\n      {\n        _id: id,\n        published: true,\n      },\n      {\n        $inc: {\n          like: 1,\n        },\n      }\n    );\n    return responseHandle.send(res, HttpStatusCode.OK, {\n      message: 'like article success',\n      data: updatedArticle,\n    });\n  } catch (error) {\n    return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n      errors: [\n        {\n          error: error.message,\n        },\n      ],\n    });\n  }\n};\n\nexport default {\n  getArticle,\n  create,\n  likeArticle\n};\n"],"file":"article.controller.js"}