{"version":3,"sources":["../../../src/api/article/article.controller.js"],"names":["getArticle","req","res","Object","keys","query","length","console","log","articles","articleService","loadArticleData","responseHandle","send","HttpStatusCode","OK","data","message","dateStart","dateEnd","tags","page","limit","key","Date","updatedAt","$gte","$lt","$in","$text","$search","totalPages","pagingHandle","paging","model","articleModel","selection","options","sendPaging","error","INTERNAL_SERVER","errors","create","article","body","like","likeArticle","id","params","updatedArticle","findOneAndUpdate","_id","published","$inc","getArticleAxios","result","per_page","tag","articlesApiService","getArticles","createArticleAxios","status","createArticle","getArticleOfMeAxios","getArticleOfMe"],"mappings":"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","sourcesContent":["import articleModel from './article.model';\nimport pagingHandle from '../../utils/pagingHandle';\nimport responseHandle from '../../utils/responseHandle';\nimport articleService from './article.service';\nimport { HttpStatusCode } from '../../const/httpCode';\nimport articlesApiService from '../../service/articlesApi/articlesApi.service';\n\nconst getArticle = async(req, res) => {\n    try {\n        if (Object.keys(req.query).length === 0) {\n            console.log('here');\n            const articles = articleService.loadArticleData();\n            return responseHandle.send(res, HttpStatusCode.OK, {\n                data: articles,\n                message: 'get top 20 success',\n            });\n        }\n        let { dateStart, dateEnd } = req.query;\n        const {\n            tags,\n            page,\n            limit,\n            key,\n        } = req.query;\n        dateStart = new Date(dateStart);\n        dateEnd = new Date(dateEnd);\n        let query = {};\n        if (dateStart && dateEnd) {\n            query = {...query, updatedAt: { $gte: dateStart, $lt: dateEnd } };\n        }\n        if (tags) {\n            query = {\n                ...query,\n                tags: {\n                    $in: tags,\n                },\n            };\n        }\n        if (key) {\n            query = {\n                ...query,\n                $text: {\n                    $search: key,\n                },\n            };\n        }\n        const [articles, totalPages] = await pagingHandle.paging({\n            model: articleModel,\n            query,\n            selection: {},\n            page,\n            limit,\n            options: {},\n        });\n\n        return responseHandle.sendPaging(\n            res,\n            HttpStatusCode.OK,\n            totalPages,\n            page, {\n                message: 'get article success',\n                data: articles,\n            },\n        );\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n};\n\nconst create = async(req, res) => {\n    try {\n        const article = await articleModel.create({\n            ...req.body,\n            like: 0,\n        });\n        return responseHandle.send(res, HttpStatusCode.OK, {\n            message: 'create article success',\n            data: article,\n        });\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n};\n\nconst likeArticle = async(req, res) => {\n    try {\n        const { id } = req.params;\n        const updatedArticle = await articleModel.findOneAndUpdate({\n            _id: id,\n            published: true,\n        }, {\n            $inc: {\n                like: 1,\n            },\n        });\n        return responseHandle.send(res, HttpStatusCode.OK, {\n            message: 'like article success',\n            data: updatedArticle,\n        });\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n};\n\nconst getArticleAxios = async(req, res) => {\n    try {\n        if (Object.keys(req.query).length === 0) {\n            console.log('here');\n            const articles = articleService.loadArticleData();\n            return responseHandle.send(res, HttpStatusCode.OK, {\n                data: articles.result,\n                message: 'get top 20 success',\n            });\n        }\n        const { page, per_page, tag } = req.query;\n        let params = {};\n        if (page && per_page) { params = {...params, page, per_page }; }\n        if (tag) params = {...params, tag };\n        const articles = await articlesApiService.getArticles({ params });\n        return responseHandle.send(res, HttpStatusCode.OK, {\n            message: 'get articles success',\n            data: articles.result,\n        });\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n};\n\nconst createArticleAxios = async(req, res) => {\n    try {\n        const { result, status } = await articlesApiService.createArticle(req.body, {});\n        return responseHandle.send(res, status, {\n            data: result,\n        });\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n};\n\nconst getArticleOfMeAxios = async(req, res) => {\n    try {\n        const { result, status } = await articlesApiService.getArticleOfMe({})\n        return responseHandle.send(res, status, {\n            data: result,\n        });\n    } catch (error) {\n        return responseHandle.send(res, HttpStatusCode.INTERNAL_SERVER, {\n            errors: [{\n                error: error.message,\n            }, ],\n        });\n    }\n}\n\nexport default {\n    getArticle,\n    create,\n    likeArticle,\n    getArticleAxios,\n    createArticleAxios,\n    getArticleOfMeAxios\n};"],"file":"article.controller.js"}