{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","app","use","bodyParser","json","urlencoded","extended","limiter","PORT","process","env","get","req","res","message","apiRouter","all","responseHandle","send","HttpStatusCode","NOT_FOUND","errors","error","listen","mongooseConfig","mongoConnect","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACAA,gBAAOC,MAAP;;AACA,MAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQK,kBAAR;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAP,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACT,IAAJ,CAAS;AACPU,IAAAA,OAAO,EAAE;AADF,GAAT;AAGD,CAJD;AAMAb,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBa,eAAnB;AAEAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACzB,SAAOI,wBAAeC,IAAf,CAAoBL,GAApB,EAAyBM,yBAAeC,SAAxC,EAAmD;AACxDC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,KAAK,EAAE;AADT,KADM;AADgD,GAAnD,CAAP;AAOD,CARD;AAUArB,GAAG,CAACsB,MAAJ,CAAWf,IAAX,EAAiB,YAAY;AAC3B,QAAMgB,kBAAeC,YAAf,EAAN;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,CAHD","sourcesContent":["import express from 'express';\nimport mongooseConfig from './config/mongoose.config';\nimport dotenv from 'dotenv';\nimport cors from 'cors';\nimport './cronJobs';\nimport responseHandle from './utils/responseHandle';\nimport bodyParser from 'body-parser';\nimport apiRouter from './api/router';\nimport { HttpStatusCode } from './const/httpCode';\nimport {limiter} from \"./config/rateLimit.config\"\ndotenv.config();\nconst app = express();\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(limiter)\nconst PORT = process.env.PORT || 5000;\n\napp.get('/', (req, res) => {\n  res.json({\n    message: 'wellcome',\n  });\n});\n\napp.use('/api/v1', apiRouter);\n\napp.all('*', (req, res) => {\n  return responseHandle.send(res, HttpStatusCode.NOT_FOUND, {\n    errors: [\n      {\n        error: 'the router can not be found',\n      },\n    ],\n  });\n});\n\napp.listen(PORT, async () => {\n  await mongooseConfig.mongoConnect();\n  console.log('run port 5000');\n});\n"],"file":"app.js"}